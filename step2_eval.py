# GENERATED by make_pyunitt.py with step2_eval.mal as input

import unittest
import repl
import printer

class REPLTest(unittest.TestCase):
    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test0(self):
        assert(repl.test_repl("(+ 1 2)") == "3")

    def test1(self):
        assert(repl.test_repl("(+ 5 (* 2 3))") == "11")

    def test2(self):
        assert(repl.test_repl("(- (+ 5 (* 2 3)) 3)") == "8")

    def test3(self):
        assert(repl.test_repl("(/ (- (+ 5 (* 2 3)) 3) 4)") == "2")

    def test4(self):
        assert(repl.test_repl("(/ (- (+ 515 (* 87 311)) 302) 27)") == "1010")

    def test5(self):
        assert(repl.test_repl("(* -3 6)") == "-18")

    def test6(self):
        assert(repl.test_repl("(/ (- (+ 515 (* -87 311)) 296) 27)") == "-994")

    def test7(self):
        try:
            self.assertRaises(RuntimeError, repl.test_repl("(abc 1 2 3)"))
        except RuntimeError:
            pass

    def test8(self):
        assert(repl.test_repl("()") == "()")

if __name__ == "__main__":
    unittest.main()
